import{_ as s,c as a,e as t,o as p}from"./app-BSSwj498.js";const e={};function o(c,n){return p(),a("div",null,[...n[0]||(n[0]=[t(`<br><p>Forthcoming.</p><p>Gaode API</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">import</span> requests</span>
<span class="line"></span>
<span class="line">ak <span class="token operator">=</span> <span class="token string">&#39;011ee546a55b717f759d76e611b0485c&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">address</span><span class="token punctuation">(</span>address<span class="token punctuation">,</span>city<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    url<span class="token operator">=</span><span class="token string">&quot;https://restapi.amap.com/v3/geocode/geo?key=%s&amp;address=%s&amp;city=%s&quot;</span><span class="token operator">%</span><span class="token punctuation">(</span>ak<span class="token punctuation">,</span>address<span class="token punctuation">,</span>city<span class="token punctuation">)</span></span>
<span class="line">    data<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span></span>
<span class="line">    contest<span class="token operator">=</span>data<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    contest<span class="token operator">=</span>contest<span class="token punctuation">[</span><span class="token string">&#39;geocodes&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;location&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">return</span> contest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">location</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    url<span class="token operator">=</span><span class="token string">&quot;https://restapi.amap.com/v3/geocode/regeo?key=%s&amp;location=%s&quot;</span><span class="token operator">%</span><span class="token punctuation">(</span>ak<span class="token punctuation">,</span>location<span class="token punctuation">)</span></span>
<span class="line">    data<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span></span>
<span class="line">    contest<span class="token operator">=</span>data<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    contest<span class="token operator">=</span>contest<span class="token punctuation">[</span><span class="token string">&#39;regeocode&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;formatted_address&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">return</span> contest</span>
<span class="line"></span>
<span class="line"><span class="token comment"># location				ct</span></span>
<span class="line"><span class="token comment"># 117.221481,31.82055	30</span></span>
<span class="line"><span class="token comment"># 117.23148,31.799835	25</span></span>
<span class="line"><span class="token comment"># 117.233454,31.818252	20</span></span>
<span class="line"><span class="token comment"># 117.231222,31.807932	8</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br>`,5)])])}const i=s(e,[["render",o]]),u=JSON.parse('{"path":"/banking/consumption-da.html","title":"","lang":"en-US","frontmatter":{},"git":{},"filePathRelative":"banking/consumption-da.md"}');export{i as comp,u as data};
